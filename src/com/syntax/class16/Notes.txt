Types of variables in java with respect to their scope:
    There are three types of variables in java with respect to their scope.
    Local, instance, and static.

Local variables:
    If a variable is declared inside a block of code like method, loop, if-condition
    they are called local variables.
Upside of a local varable:
    The upside is they exist for a very short amount of time in the memory.
    which means other programs on our computer can use that memory.
Down-Side of local variables:
    Their scope is very limited. Only inside that block in which they are created.
    We can't access them outside that block of code.
When to use:
    We should always try to use local variables over instance variables whenever it
    is possible.

Instance variables:
    The variables which are declared inside a class but outside a block of code are called
    instance variables.
Upside of instance variables:
    We can use these variables inside any block of code that is inside that class.
Downside of instance variables:
    They occupy the memory for longer than a local variable.
When we should use instance variables:
    1)When we need to share a value between two or more methods then we should go with the instance variable.
    2)When we are planning to create multiple objects of a class and it is possible that all the objects can have
    a different value for that variable.

Static variables:
    An instance variable with static keyword is called a static variable.
Upside of static variables:
    We can share data across the objects with the help of static variables.
Downside of static variables:
    They occupy the memory for the longest duration.
When to use:
    When we want to share something across all the methods.


======================================================================================
Access Modifiers:
    Access modifiers are keywords which control the access of fields or methods or the class itself
    There are 4 access levels and three access modifier keywords. These are only applicable to instance and static
    variables. N/A to local variables

Private Access Modifier:
    Private is the most restricted modifier. If we use private keyword with any variable or method,
    we can only access it within the same class.
When we should use private access modifier:
    We should always try to create variables as private.
    The data that we store inside the private variables is secured.

Default Access Modifier:
    Default is not a keyword. Whenever we don't assign any access modifier keyword like
    private or public, Java assigns default access level to those variables or methods.
    The variables or methods which have default access level can be accessed within the same class or in any other
    class that is present inside the same package.

Public Access Modifier:
    Public access is the most unrestricted access modifier. Once used with a variable or method we can access that
    variable or method within any class or package


Note: We can have multiple classes within a file but we are only allowed one public class in a file(and the public class
has to match the name of file)


