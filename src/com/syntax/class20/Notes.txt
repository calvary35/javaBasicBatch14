What is inheritance:
    It's a mechanism through which a class can inherit the properties and methods of another class.

 Why we should learn inheritance:

    It helps us avoid code duplication.
    It helps us save space.
    It helps us improve the execution speed.

 What is the syntax?
    We use the extends keyword and the name of the class from which we want to inherit
    the fields and methods while declaring the class.

 Types of inheritance:
    There can be 4 types of inheritance but java only supports 3 of them with classes.
    1. Single inheritance
    2. Multi-level inheritance
    3. Hierarchical inheritance
    4. Mutliple inheritance(it is not supported by classes in Java)

Single inheritance:
    When we have only one parent and one child classes in inheritance it is called single inheritance.
    Not widely used.

Multilevel inheritance:
    One top level and one base class and many intermediate classes. For example A<B<C<D

Hierarchical inheritance:
    When we have one parent class and multiple child classes its called Hierarchical Inheritance.

Multiple inheritance:
    One child and multiple parent classes. It is not supported by classes in Java. It creates the diamond problem.

Super keyword:
    We use the super keyword to explicitly call the variable from the parent class when we have same name instance
    variable in child class and parent class.
    We can also use the super keyword to call the constructor of the parent class.
====================================================================================================================
Method Overloading:
    Method overloading allows us to create multiple methods in a class with the same name.

Why we should create the multiple methods with same name?
    It gives the end use flexibility.
    The end user can call the same method with different parameters to get same or different results.

How do we overload a method?
    1. Bypassing different number of parameters.
    2. By changing the datatype
    3. By changing the sequence of parameters

